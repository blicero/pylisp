# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2024-05-19 21:18:10 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* kryLisp
  A naive Lisp interpreter, written in Python.
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2024-05-19 So 21:18]
   | Headline               | Time   |        |      |
   |------------------------+--------+--------+------|
   | *Total time*           | *4:54* |        |      |
   |------------------------+--------+--------+------|
   | *kryLisp*              | *4:54* |        |      |
   | \_  /Components [0/1]/ |        | /4:54/ |      |
   | \_    Parser           |        |        | 4:54 |
   #+END:
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Components [0/1]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** TODO Parser
    :LOGBOOK:
    CLOCK: [2024-05-19 So 17:33]--[2024-05-19 So 21:18] =>  3:45
    CLOCK: [2024-05-19 So 15:56]--[2024-05-19 So 17:05] =>  1:09
    :END:
** Bugs [0/4]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** TODO Linters to the rescue [0/3]
    I wrote a Lisp interpreter in Python many years ago (2010, apparently),
    and I am trying to copy some of the code, which makes the linters scream.
    The old code was written for Python 2, so ... no surprise there.
    So here's what I am going to do:
**** TODO Pacify the linters
     Fix everything the linters are barking at
**** TODO Add type hints
     Add type annotations, as far as possible and helpful
**** TODO Testing
     I should probably write some tests, too.
